suite: Agent RBAC Service Account Tests
templates:
  - rbac-serviceaccount.yaml
tests:
  - it: should not create a service account by default
    asserts:
      - hasDocuments:
          count: 0

  - it: should create a service account with the default name if `rbac.create` is true
    set:
      rbac:
        create: true
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: ServiceAccount
      - equal:
          path: metadata.name
          value: RELEASE-NAME-cbagent
      - equal:
          path: metadata.labels.app
          value: RELEASE-NAME-cbagent

  - it: should create a service account with the specified name if `rbac.serviceAccountName` is set
    set:
      rbac:
        create: true
        serviceAccountName: test-sa
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: ServiceAccount
      - equal:
          path: metadata.name
          value: test-sa
      - equal:
          path: metadata.labels.app
          value: test-sa

  - it: imagePullSecrets should not exist by default
    set:
      rbac:
        create: true
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: ServiceAccount
      - notExists:
          path: imagePullSecrets


  - it: ServiceAccount and imagePullSecrets should exist if specified as string in `images` section
    set:
      images.imagePullSecrets: images-test-secret
      rbac:
        create: false
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: ServiceAccount
      - exists:
          path: imagePullSecrets
      - equal:
          path: imagePullSecrets[0].name
          value: images-test-secret

  - it: ServiceAccount and imagePullSecrets should exist if specified as array in `images` section
    set:
      images.imagePullSecrets:
        - name: images-test-secret1
        - name: images-test-secret2
    asserts:
      - hasDocuments:
          count: 1
      - exists:
          path: imagePullSecrets
      - equal:
          path: imagePullSecrets[0].name
          value: images-test-secret1
      - equal:
          path: imagePullSecrets[1].name
          value: images-test-secret2

  - it: ServiceAccount and imagePullSecrets should exist if imagePullSecrets specified as string in `global.cloudbees` section
    set:
      global.cloudbees.imagePullSecrets: global-test-secret
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: ServiceAccount
      - exists:
          path: imagePullSecrets
      - equal:
          path: imagePullSecrets[0].name
          value: global-test-secret

  - it: ServiceAccount and imagePullSecrets should exist if imagePullSecrets specified as array in `global.cloudbees` section
    set:
      global.cloudbees.imagePullSecrets:
        - name: global-test-secret
        - name: global-test-secret2
    asserts:
      - hasDocuments:
          count: 1
      - exists:
          path: imagePullSecrets
      - equal:
          path: imagePullSecrets[0].name
          value: global-test-secret
      - equal:
          path: imagePullSecrets[1].name
          value: global-test-secret2

  - it: global imagePullSecrets should override images imagePullSecrets
    set:
      images.imagePullSecrets:
        - name: images-test-secret1
        - name: images-test-secret2
      global.cloudbees.imagePullSecrets:
        - name: global-test-secret1
        - name: global-test-secret2
    asserts:
      - hasDocuments:
          count: 1
      - exists:
          path: imagePullSecrets
      - equal:
          path: imagePullSecrets[0].name
          value: global-test-secret1
      - equal:
          path: imagePullSecrets[1].name
          value: global-test-secret2

  - it: global imagePullSecrets should override images imagePullSecrets
    set:
      images.imagePullSecrets: images-test-secret
      global.cloudbees.imagePullSecrets: global-test-secret
    asserts:
      - hasDocuments:
          count: 1
      - exists:
          path: imagePullSecrets
      - equal:
          path: imagePullSecrets[0].name
          value: global-test-secret
